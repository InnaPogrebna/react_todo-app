{"version":3,"sources":["TodoContext.jsx","components/TodoApp/TodoApp.jsx","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","App.jsx","index.js"],"names":["TodoContext","React","createContext","TodoApp","useContext","setTodos","todos","setInputText","inputText","onSubmit","event","preventDefault","id","Date","toLocaleTimeString","title","complete","type","className","value","placeholder","onChange","target","TodoItem","item","isChecked","getChangeTitle","useState","setTitle","editing","setEditing","updateTodo","name","checked","map","todo","htmlFor","onDoubleClick","onClick","filter","onBlur","onKeyDown","key","updateTodoKeyDown","TodoList","filterTodos","setIsChecked","useEffect","length","TodosFilter","setFilterStatus","clearCompleted","leftItem","setLeftItem","href","App","filterStatus","localStorage","getItem","setItem","JSON","stringify","parse","useCallback","newTitle","currentTodos","useMemo","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.845fb141.chunk.js","sourcesContent":["import React from 'react';\n\nexport const TodoContext = React.createContext();\n","import React, { useContext } from 'react';\nimport '../../styles/index.css';\nimport '../../styles/todo-list.css';\n\nimport { TodoContext } from '../../TodoContext';\n\nconst TodoApp = () => {\n  const { setTodos, todos, setInputText, inputText } = useContext(TodoContext);\n  const handleInputChange = (event) => {\n    setInputText(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setTodos([\n      ...todos,\n      {\n        id: new Date().toLocaleTimeString(),\n        title: inputText,\n        complete: false,\n      },\n    ]);\n\n    setInputText('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        value={inputText}\n        placeholder=\"What needs to be done?\"\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n};\n\nexport default TodoApp;\n","import React, { useContext, useState } from 'react';\nimport { TodoContext } from '../../TodoContext';\n\nconst TodoItem = ({ item, isChecked }) => {\n  const { setTodos, todos, getChangeTitle } = useContext(TodoContext);\n  const [title, setTitle] = useState('');\n  const [editing, setEditing] = useState(false);\n\n  const updateTodo = (event) => {\n    event.preventDefault();\n    getChangeTitle(item.id, title);\n    setEditing(false);\n  };\n\n  const updateTodoKeyDown = (event) => {\n    switch (event.key) {\n      case 'Enter':\n        updateTodo(event);\n        break;\n      case 'Escape':\n      case 'Esc':\n        setEditing(false);\n        setTitle(item.title);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleChangeComplete = () => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === item.id) {\n        return {\n          ...todo,\n          complete: !todo.complete,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const deleteTodo = () => {\n    setTodos(todos.filter(todo => todo.id !== item.id));\n  };\n\n  return (\n    <li\n      key={item.id}\n      className={`\n        ${editing ? 'editing' : ''}\n        ${item.complete ? 'completed' : ''}\n      `}\n    >\n      <div\n        className=\"view\"\n      >\n        <input\n          type=\"checkbox\"\n          name=\"check\"\n          checked={item.complete}\n          className=\"toggle\"\n          id=\"toggle-view\"\n          onChange={handleChangeComplete}\n        />\n        <label\n          htmlFor=\"toggle-view\"\n          onDoubleClick={(event) => {\n            setEditing(true);\n          }}\n        >\n          {item.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={deleteTodo}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={title}\n        id={`${item.id}`}\n        onChange={(event) => {\n          setTitle(event.target.value);\n        }}\n        onBlur={(event) => {\n          updateTodo(event);\n        }}\n        onKeyDown={(event) => {\n          updateTodoKeyDown(event);\n        }}\n      />\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React, { useState, useEffect, useContext } from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoContext } from '../../TodoContext';\nimport '../../styles/index.css';\nimport '../../styles/todo-list.css';\n\nconst TodoList = () => {\n  const { filterTodos, todos, setTodos } = useContext(TodoContext);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleToggleAll = () => {\n    setIsChecked(!isChecked);\n  };\n\n  useEffect(() => {\n    setTodos(\n      todos.map(todo => ({\n        ...todo,\n        complete: isChecked,\n      })),\n    );\n  }, [isChecked]);\n\n  return (\n    <>\n      {(todos.length > 0) && (\n      <>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={handleToggleAll}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      </>\n      )\n      }\n      <ul className=\"todo-list\">\n        {filterTodos.map(item => (\n          <TodoItem\n            item={item}\n            key={item.id}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default TodoList;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { TodoContext } from '../../TodoContext';\n\nconst TodosFilter = ({ setFilterStatus, clearCompleted }) => {\n  const [leftItem, setLeftItem] = useState([]);\n  const { todos } = useContext(TodoContext);\n\n  useEffect(() => {\n    setLeftItem(todos.filter(todo => !todo.complete));\n  }, [todos]);\n\n  return (\n    <>\n      {(leftItem.length > 0)\n        && (\n        <span className=\"todo-count\">\n          {leftItem.length}\n          {' '}\n          items left\n        </span>\n        )\n      }\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className=\"selected\"\n            onClick={() => setFilterStatus('all')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            onClick={() => setFilterStatus('active')}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            onClick={() => setFilterStatus('completed')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {(leftItem.length !== todos.length) && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n      )}\n    </>\n  );\n};\n\nexport default TodosFilter;\n","import React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport TodoApp from './components/TodoApp/TodoApp';\nimport TodoList from './components/TodoList/TodoList';\nimport TodoFilter from './components/TodosFilter/TodosFilter';\nimport { TodoContext } from './TodoContext';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [todos, setTodos] = useState([]);\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n\n    setTodos(JSON.parse(localStorage.getItem('todos')));\n  };\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const getChangeTitle = useCallback((id, newTitle) => {\n    setTodos(currentTodos => currentTodos\n      .map(todo => ((todo.id === id && newTitle.length > 0)\n        ? { ...todo, title: newTitle } : todo)));\n  }, []);\n\n  const filterTodos = useMemo(() => {\n    switch (filterStatus) {\n      case 'completed':\n        return todos.filter(todo => todo.complete);\n      case 'active':\n        return todos.filter(todo => !todo.complete);\n      default:\n        return todos;\n    }\n  }, [filterStatus, todos]);\n\n  const clearCompleted = useCallback(() => {\n    setTodos(currentTodos => currentTodos\n      .filter(todo => !todo.complete));\n  }, []);\n\n  return (\n    <TodoContext.Provider value={{\n      todos,\n      setTodos,\n      inputText,\n      setInputText,\n      filterTodos,\n      getChangeTitle,\n    }}\n    >\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>Todos</h1>\n          <TodoApp />\n        </header>\n\n        <section className=\"main\">\n          <TodoList />\n        </section>\n\n        <footer className=\"footer\">\n          <TodoFilter\n            setFilterStatus={setFilterStatus}\n            clearCompleted={clearCompleted}\n          />\n        </footer>\n      </section>\n    </TodoContext.Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}